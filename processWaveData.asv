% Copyright (C) 2025 Eduardo Castro
% Author: Eduardo Castro <eduardocastro@MacBook-Air-de-Eduardo.local>
% Created: 2025-06-03

function [] = processWaveData(kappa, widths, angles, options)


% Set default parameter values
    if nargin < 4
        options = struct();
    end

    % Default graph parameters
    if nargin < 1 || isempty(kappa), kappa = 0.25; end
    if nargin < 2 || isempty(widths), widths = [1, 0.5, 0.5]; end
    if nargin < 3 || isempty(angles), angles = [0, 2*pi/3, 4*pi/3]; end

    % Default numerical parameters
    default_options = struct(...
        'dxi', 0.03, ...
        'dzeta', 0.065, ...
        'ep', 0.01,...
        'plot_physical', false,...
        'plot_canonical', false,...
        'play_movie', true);

    % Merge user options with defaults
    option_names = fieldnames(default_options);
    for k = 1:length(option_names)
        if ~isfield(options, option_names{k})
            options.(option_names{k}) = default_options.(option_names{k});
        end
    end

    %% Load wave Graph
    ang_display = round(angles, 3);
    data = load(['WaveData/kappa', num2str(kappa),'widths= ', mat2str(widths), 'angles= ', mat2str(ang_display), '.mat']);
    %load(sprintf('GraphData/Lx=%.1f_widths=%s_angles=%s.mat', ...
        %Lx, mat2str(widths), mat2str(ang_display)), ...
        %'fg', 'f_tilde', 'C', 'J', 'w', 'z');
    
    %%
    h = data.h;
    X1 = data.X1;
    X2 = data.X2;
    X3 = data.X3;
    Y1 = data.Y1;
    Y2 = data.Y2;
    Y3 = data.Y3;
    t = data.t;
    z = data.z;
    xi_lims = data.xi_lims;
    Xi = data.Xi;
    J = data.J;
    th_zeta = data.th_zeta;
    th_xi = data.th_xi;
    
    %%
    if options.plot_physical     
    hh=h;
    
    jmp = 1;
    
    h1=hh(1:end,1:jmp:th_xi+1);
    h2=hh(1:th_zeta,th_xi-1:jmp:end);
    h3=hh(th_zeta+1:end,th_xi-1:jmp:end);
    
    XX1 = X1(1:end,1:jmp:end);
    YY1 = Y1(1:end,1:jmp:end);
    
    XX2 = X2(1:end,1:jmp:end);
    YY2 = Y2(1:end,1:jmp:end);
    
    XX3 = X3(1:jmp:end,1:jmp:end);
    YY3 = Y3(1:jmp:end,1:jmp:end);
    
    %subplot(1,2,1)
    mesh(XX1, YY1, h1, 'edgecolor', 'k'); hold on,
    mesh(XX2, YY2, h2, 'edgecolor', 'k');
    mesh(XX3, YY3, h3, 'edgecolor', 'k');
    hold off,
    %view(az, el);
    zlim([-0.15,.2])
    %caxis([min(h(:)), max(h(:))]);  % Set the color axis limits based on the data range
    xlabel('X'); ylabel('Y'); zlabel('h');
    title(['Time evolution of wave profile = ',num2str(t)]);
    
    %subplot(1,2,2)
    %surf(Xi,Zeta,h)
    
    drawnow;
    end
    
    
    if options.plot_canonical
        %
        
        hh=h;
        
        h1=hh(:,1:th_xi+1);
        h2=hh(1:th_zeta,th_xi-1:end);
        h3=hh(th_zeta+1:end,th_xi-1:end);
        
        %subplot(1, 2, 1);
        %mesh(X1, Y1, h1, 'edgecolor', 'k'); hold on,
        %mesh(X2, Y2, h2, 'edgecolor', 'k');
        %mesh(X3, Y3, h3, 'edgecolor', 'k');
        
        %hold off,
        %
        %subplot(1, 2, 2);
        mesh(xi,zeta,h)
        zlim([-0.05,a])
        
        %set(gcf, 'Renderer', 'opengl');  % Better rendering quality
        %set(gca, 'FontSize', 14);        % Make axes labels crisper
        %shading interp                   % Smooth surface shading
        %lighting gouraud                 % Optional: if you use lighting
        
        drawnow;
        %frame = getframe(gcf); % Capture current figure
        %writeVideo(vwriter, frame); % Write frame to video
        
    end
    
    if options.play_movie
        figure
        for i = 1:data.options.frames
            
            h = data.H(:,i);
            
            hh=h;

            jmp = 1;

            h1=hh(1:end,1:jmp:th_xi+1);
            h2=hh(1:th_zeta,th_xi-1:jmp:end);
            h3=hh(th_zeta+1:end,th_xi-1:jmp:end);

            XX1 = X1(1:end,1:jmp:end);
            YY1 = Y1(1:end,1:jmp:end);

            XX2 = X2(1:end,1:jmp:end);
            YY2 = Y2(1:end,1:jmp:end);

            XX3 = X3(1:jmp:end,1:jmp:end);
            YY3 = Y3(1:jmp:end,1:jmp:end);

            %subplot(1,2,1)
            mesh(XX1, YY1, h1, 'edgecolor', 'k'); hold on,
            mesh(XX2, YY2, h2, 'edgecolor', 'k');
            mesh(XX3, YY3, h3, 'edgecolor', 'k');
            hold off,
            %view(az, el);
            zlim([-0.15,.2])
            %caxis([min(h(:)), max(h(:))]);  % Set the color axis limits based on the data range
            xlabel('X'); ylabel('Y'); zlabel('h');
            title(['Time evolution of wave profile = ',num2str(t)]);
            
            pause(1)

            %subplot(1,2,2)
            %surf(Xi,Zeta,h)

            drawnow;
            
        end
        
    end
  




endfunction
